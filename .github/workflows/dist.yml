name: dist

# Controls when the workflow will run
on:
  # Triggers the workflow on push for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}
          RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}
      - name: Test with input
        uses: actions/hello-world-docker-action@master
        with:
          who-to-greet: Mona-the-Octocat-${{ steps.date.outputs.date }}
    
    
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          git fetch
          git reset
          git switch dist
          git switch main
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Python dependences cache
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          test -f requirements.txt && pip install -r requirements.txt

      - env:
          PLACEHOLDER_ENV: ${{ secrets.PLACEHOLDER }}
        run: python -u ./integration/publish.py
      
      - run: git symbolic-ref HEAD refs/heads/dist
      - run: git reset
      - run: git checkout -- .gitignore
      - id: git_commit
        uses: zwaldowski/git-commit-action@v1
      - run: git push

#       - uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: latest
#           prerelease: false

      - name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete auto -y
          git tag -d auto
          git push origin :refs/tags/auto
          gh release create auto --target dist
          
        
        
        
        

